generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  Active
  Inactive
}

enum MessageStatus {
  Sent
  Read
}

model app_users {
  id          Int             @id @default(autoincrement())
  email       String          @unique
  password    String
  username    String
  avatar      String?
  role        String          @default("user")
  country     String?
  nativeLang  String?
  targetLang  String?
  level       String          @default("A2")
  createdAt   DateTime        @default(now())
  status      UserStatus      @default(Inactive)

  messagesSent  chat_messages[] @relation("SentMessages")
  dailyTasks    daily_tasks[]
  room_users    room_users[]
}

model chat_rooms {
  id         Int           @id @default(autoincrement())
  theme      String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime?     @default(now()) @updatedAt

  room_users room_users[]
  messages   chat_messages[]
}

model room_users {
  user    app_users   @relation(fields: [userId], references: [id])
  userId  Int

  room    chat_rooms  @relation(fields: [roomId], references: [id])
  roomId  Int

  @@id([userId, roomId])
}

model chat_messages {
  id         Int           @id @default(autoincrement())
  content    String
  createdAt  DateTime      @default(now())
  status     MessageStatus @default(Sent)

  sender     app_users     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int

  room       chat_rooms    @relation(fields: [roomId], references: [id])
  roomId     Int
}

model daily_tasks {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  type       String
  createdAt  DateTime   @default(now())
  completed  Boolean    @default(false)

  user       app_users  @relation(fields: [userId], references: [id])
  userId     Int
}